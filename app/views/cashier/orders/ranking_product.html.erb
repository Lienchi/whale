<div class="container">
 
  <%= render :partial => "shared/tabs_general_function", :locals => { :selected_item => '銷售報表' } %>
  <%= render :partial => "shared/tabs_analysis", :locals => { :selected_item => '銷售排行' } %>
 
<br>
<p style="text-align: right">統計時間：<%= Date.today.all_month %></p> 
 <table class="table">
    <tbody>
      <tr>
        <th>分類</th>
        <th>中文名稱</th>
        <th>國際條碼</th>
        <th>規格</th>
        <th>定價</th>
        <th>數量</th>
      </tr>
    </tbody>  
    <tbody>
      <% i = 0 %>
      <% @product_ranking.each do |item| %> 
      <tr>
        <td><%= item.product.category %></td>
        <td class="alnleft"><%= item.product.zh_name %>
        <% if i == 0 %>
        <i class = "glyphicon glyphicon-fire" aria-hidden="true" style="color:red"></i>
        <% end %></td>
        <td><%= item.product.upc %></td>
        <td><%= item.product.capacity %></td>
        <td class="alnright"><%= item.product.price %></td>   
        <td><%= @product_quantity[i]  %></td>
      </tr>
      <% i += 1 %>
      <% end %>
    </tbody>
  </table> 
  
</div>
<div class="container">
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"></script>
<canvas id="userChart" width="200" height="80"></canvas>
</div>



<script>
clearTimeout(go);   
var go = setTimeout(display, 500); 

function display() {
  var yAxis= <%= @y.inspect.html_safe %>;
  var xAxis = <%= @products.inspect.html_safe %>;

  var ctx = document.getElementById("userChart").getContext('2d');

  console.log(xAxis.length);
  var userChart = new Chart(ctx, {
      type: 'bar',
      data: {
          labels: xAxis,
          datasets: [{
              label: '商品銷售量',
              data: yAxis,
              backgroundColor: generateBackgroundColors(xAxis.length),
              borderColor: generateBorderColors(xAxis.length),
              borderWidth: 1
            }]
          },
          options: {
            scales: {
              xAxes: [{
                ticks: {
                autoSkip: false
                }
              }],
              yAxes: [{
                  ticks: {
                      beginAtZero:true
                  }
              }]
          }
      }
  });

  function generateBackgroundColors(size){
    var background_color_list = [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)',];
    var color_num = background_color_list.length;
    var backgroundColors =[];
    for(var i=0; i<size; i++){
      backgroundColors.push(background_color_list[i%color_num]);
    }

    return backgroundColors;
  }

  function generateBorderColors(size){
    var border_color_list = [
          'rgba(255,99,132,1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)',];
    var color_num = border_color_list.length;
    var borderColors =[];
    for(var i=0; i<size; i++){
      borderColors.push(border_color_list[i%color_num]);
    }
    return borderColors;
  }
}
</script>